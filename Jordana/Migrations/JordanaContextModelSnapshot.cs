// <auto-generated />
using System;
using Jordana.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Jordana.Migrations
{
    [DbContext(typeof(JordanaContext))]
    partial class JordanaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.33")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Jordana.Models.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .HasColumnType("int")
                        .HasColumnName("Booking_ID");

                    b.Property<DateTime?>("BookingDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Booking_Date");

                    b.Property<DateTime>("BookingEndDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Booking_EndDate");

                    b.Property<string>("BookingStatus")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("Booking_Status");

                    b.Property<string>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasDefaultValueSql("('System')");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(now())");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.Property<int>("SiteId")
                        .HasColumnType("int")
                        .HasColumnName("Site_ID");

                    b.Property<string>("Transportation")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedBy")
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("User_ID");

                    b.HasKey("BookingId");

                    b.HasIndex("SiteId");

                    b.HasIndex("UserId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("Jordana.Models.BookingMember", b =>
                {
                    b.Property<int>("MemId")
                        .HasColumnType("int")
                        .HasColumnName("Mem_ID");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("BookingId")
                        .HasColumnType("int")
                        .HasColumnName("Booking_ID");

                    b.Property<string>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasDefaultValueSql("('System')");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(now())");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<string>("NationalId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("NationalID");

                    b.Property<string>("PassportNumber")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("ReferencePhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedBy")
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.HasKey("MemId")
                        .HasName("PK_Mem");

                    b.HasIndex("BookingId");

                    b.ToTable("Booking_Members", (string)null);
                });

            modelBuilder.Entity("Jordana.Models.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .HasColumnType("int")
                        .HasColumnName("Review_ID");

                    b.Property<string>("Comment")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasDefaultValueSql("('System')");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(now())");

                    b.Property<string>("Rating")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<DateTime>("ReviewDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Review_Date");

                    b.Property<int>("SiteId")
                        .HasColumnType("int")
                        .HasColumnName("Site_ID");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedBy")
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("User_ID");

                    b.HasKey("ReviewId");

                    b.HasIndex("SiteId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("Jordana.Models.SiteMedium", b =>
                {
                    b.Property<int>("MediaId")
                        .HasColumnType("int")
                        .HasColumnName("Media_ID");

                    b.Property<string>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasDefaultValueSql("('System')");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(now())");

                    b.Property<int?>("SiteId")
                        .HasColumnType("int")
                        .HasColumnName("Site_ID");

                    b.Property<string>("Type")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedBy")
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<string>("Url")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("URL");

                    b.HasKey("MediaId")
                        .HasName("PK_Media");

                    b.HasIndex("SiteId");

                    b.ToTable("Site_Media", (string)null);
                });

            modelBuilder.Entity("Jordana.Models.TouristsSite", b =>
                {
                    b.Property<int>("SiteId")
                        .HasColumnType("int")
                        .HasColumnName("Site_ID");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasDefaultValueSql("('System')");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(now())");

                    b.Property<string>("EntryFee")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Entry_Fee");

                    b.Property<double>("Lat")
                        .HasColumnType("double");

                    b.Property<double>("Long")
                        .HasColumnType("double");

                    b.Property<string>("OpeningHours")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Opening_Hours");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("SiteDescription")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("Site_Description");

                    b.Property<string>("SiteLocation")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Site_Location");

                    b.Property<string>("SiteName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("Site_Name");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedBy")
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.HasKey("SiteId")
                        .HasName("PK_Site");

                    b.HasIndex(new[] { "SiteName" }, "UK_Name")
                        .IsUnique();

                    b.ToTable("Tourists_Sites", (string)null);
                });

            modelBuilder.Entity("Jordana.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("User_ID");

                    b.Property<string>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasDefaultValueSql("('System')");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(now())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("varchar(70)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("ProfileImage")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedBy")
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("User_Type");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.HasKey("UserId");

                    b.HasIndex(new[] { "Email" }, "UK_Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Jordana.Models.UserFavorite", b =>
                {
                    b.Property<int>("FavId")
                        .HasColumnType("int")
                        .HasColumnName("Fav_ID");

                    b.Property<string>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasDefaultValueSql("('System')");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(now())");

                    b.Property<int?>("SiteId")
                        .HasColumnType("int")
                        .HasColumnName("Site_ID");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedBy")
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("User_ID");

                    b.HasKey("FavId")
                        .HasName("PK_Fav");

                    b.HasIndex("SiteId");

                    b.HasIndex("UserId");

                    b.ToTable("User_Favorite", (string)null);
                });

            modelBuilder.Entity("Jordana.Models.Booking", b =>
                {
                    b.HasOne("Jordana.Models.TouristsSite", "Site")
                        .WithMany("Bookings")
                        .HasForeignKey("SiteId")
                        .IsRequired()
                        .HasConstraintName("FK_SiteBook");

                    b.HasOne("Jordana.Models.User", "User")
                        .WithMany("Bookings")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_UserBook");

                    b.Navigation("Site");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Jordana.Models.BookingMember", b =>
                {
                    b.HasOne("Jordana.Models.Booking", "Booking")
                        .WithMany("BookingMembers")
                        .HasForeignKey("BookingId")
                        .IsRequired()
                        .HasConstraintName("FK_BI");

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("Jordana.Models.Review", b =>
                {
                    b.HasOne("Jordana.Models.TouristsSite", "Site")
                        .WithMany("Reviews")
                        .HasForeignKey("SiteId")
                        .IsRequired()
                        .HasConstraintName("FK_Site");

                    b.HasOne("Jordana.Models.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_User");

                    b.Navigation("Site");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Jordana.Models.SiteMedium", b =>
                {
                    b.HasOne("Jordana.Models.TouristsSite", "Site")
                        .WithMany("SiteMedia")
                        .HasForeignKey("SiteId")
                        .HasConstraintName("FK_SM");

                    b.Navigation("Site");
                });

            modelBuilder.Entity("Jordana.Models.UserFavorite", b =>
                {
                    b.HasOne("Jordana.Models.TouristsSite", "Site")
                        .WithMany("UserFavorites")
                        .HasForeignKey("SiteId")
                        .HasConstraintName("FK_SF");

                    b.HasOne("Jordana.Models.User", "User")
                        .WithMany("UserFavorites")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_UF");

                    b.Navigation("Site");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Jordana.Models.Booking", b =>
                {
                    b.Navigation("BookingMembers");
                });

            modelBuilder.Entity("Jordana.Models.TouristsSite", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Reviews");

                    b.Navigation("SiteMedia");

                    b.Navigation("UserFavorites");
                });

            modelBuilder.Entity("Jordana.Models.User", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Reviews");

                    b.Navigation("UserFavorites");
                });
#pragma warning restore 612, 618
        }
    }
}
